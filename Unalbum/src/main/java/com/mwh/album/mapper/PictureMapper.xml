<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mwh.album.mapper.PictureMapper">
    <resultMap id="PictureList" type="com.mwh.album.model.Picture">
        <id property="id" column="id"/>
        <result property="picName" column="picName"/>
        <result property="picCategory" column="picCategory"/>
        <result property="picURL" column="picURL"/>
        <result property="createDate" column="createDate"/>
        <result property="picLikes" column="picLikes"/>
        <result property="picCollection" column="picCollection"/>
        <result property="picProfile" column="picProfile"/>
        <result property="isShare" column="isShare"/>
        <association property="user" javaType="com.mwh.album.model.User"
                     select="com.mwh.album.mapper.UserMapper.findById" column="user"/>
    </resultMap>


    <insert id="save" parameterType="Picture">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into td_picture
        values
        (null,#{picName},#{picCategory},#{picURL},
        #{createDate},#{picLikes},#{picCollection},#{user.id},#{picProfile},#{isShare})
    </insert>


    <update id="update" parameterType="Picture" >
        update td_picture set
        picName = #{picName},
        picCategory = #{picCategory},
        isShare=#{isShare},
        picProfile=#{picProfile}
        where id = #{id}
    </update>

    <update id="updatePictureLikes" parameterType="Picture">
        update td_picture SET
        picLikes = #{picLikes}
        where id = #{id}
    </update>

    <update id="updatePictureCollection" parameterType="Picture">
        UPDATE td_picture SET
        picCollection = #{picCollection}
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="int">
        delete from td_picture where
        id = #{id}
    </delete>

    <select id="findAllByPage" resultMap="PictureList">
        select * from td_picture WHERE isShare = 1
        order by createDate limit #{currIndex}, #{pageSize}
    </select>


    <select id="findById" parameterType="int" resultType="Picture">
        select *
        from td_picture where id=#{id}
    </select>

    <select id="findyByUserMostClose" parameterType="int" resultType="Picture">
        select *
        from td_picture where user=#{userId} order by createDate DESC limit 1
    </select>

    <select id="findByUserIdOrderByPage" resultMap="PictureList">
        select *
        from td_picture where user=#{userId}
        ORDER  BY createDate DESC limit #{currIndex}, #{pageSize}
    </select>

    <select id="findByUserIdOrderByPageAndDate" resultMap="PictureList">
        select *
        from td_picture where user=#{userId} AND
        <choose>
            <when test="beginDate != null and endDate != null">
                createDate BETWEEN #{beginDate} AND #{endDate}
            </when>
            <when test="beginDate != null">
                createDate >= #{beginDate}
            </when>
            <otherwise>
                #{endDate} >= createDate
            </otherwise>
        </choose>
        ORDER  BY createDate DESC limit #{currIndex}, #{pageSize}
    </select>

    <select id="findByCategoryID" parameterType="int" resultMap="PictureList">
        select *
        from td_picture where isShare = 1 AND picCategory=#{picCategory}
        order by tp.createDate DESC
    </select>


    <select id="findByCategoryIDOrderByPage" resultMap="PictureList">
        select * from td_picture tp
        where tp.isShare = 1 AND picCategory=#{picCategory}
        order by tp.createDate DESC
        limit #{currIndex}, #{pageSize}
    </select>


    <select id="findByDateMostClose" parameterType="String" resultType="Picture">
        select * from td_picture tp left join td_picture_category tpc on tp.picCategory = tpc.id
         where tp.isShare = 1 AND tpc.categoryName = #{categoryName}
         ORDER BY createDate DESC LIMIT 1
    </select>
    
    <select id="findByPictureLikes" parameterType="Date" resultMap="PictureList">
        SELECT * FROM td_picture
        WHERE isShare = 1 AND TO_DAYS(NOW())- TO_DAYS(#{newDate}) = 1
        ORDER BY picLikes DESC LIMIT 3
    </select>
    
    <select id="countByCategory" parameterType="int" resultType="int">
        select count(*) from td_picture where isShare = 1 AND picCategory = #{picCategory}
    </select>

    <select id="countAll" resultType="int">
        select count(*) FROM td_picture where isShare = 1
    </select>

    <select id="countByTag" parameterType="String" resultType="int">
        select count(*) from td_picture tp
        LEFT JOIN td_picture_tag tpt ON tp.id = tpt.pictureId
        LEFT JOIN td_tag tt ON tpt.tagId = tt.id
         where tp.isShare = 1 AND tt.tagName LIKE #{tagName}
    </select>

    <select id="countByUserId" parameterType="int" resultType="int">
        select count(*) from td_picture where user = #{userId}
    </select>

    <select id="countByDate" resultType="int">
        select count(*)
        from td_picture where user=#{userId} AND
        <choose>
            <when test="beginDate != null and endDate != null">
                createDate BETWEEN #{beginDate} AND #{endDate}
            </when>
            <when test="beginDate != null">
                createDate >= #{beginDate}
            </when>
            <when test="endDate != null">
                #{endDate} >= createDate
            </when>
        </choose>
    </select>


</mapper>